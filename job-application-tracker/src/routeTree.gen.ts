/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AddJobRouteImport } from './routes/add-job'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JobsJobIdRouteImport } from './routes/jobs.$jobId'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AddJobRoute = AddJobRouteImport.update({
  id: '/add-job',
  path: '/add-job',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsJobIdRoute = JobsJobIdRouteImport.update({
  id: '/jobs/$jobId',
  path: '/jobs/$jobId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-job': typeof AddJobRoute
  '/dashboard': typeof DashboardRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-job': typeof AddJobRoute
  '/dashboard': typeof DashboardRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add-job': typeof AddJobRoute
  '/dashboard': typeof DashboardRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add-job' | '/dashboard' | '/jobs/$jobId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add-job' | '/dashboard' | '/jobs/$jobId'
  id: '__root__' | '/' | '/add-job' | '/dashboard' | '/jobs/$jobId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddJobRoute: typeof AddJobRoute
  DashboardRoute: typeof DashboardRoute
  JobsJobIdRoute: typeof JobsJobIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-job': {
      id: '/add-job'
      path: '/add-job'
      fullPath: '/add-job'
      preLoaderRoute: typeof AddJobRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs/$jobId': {
      id: '/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof JobsJobIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddJobRoute: AddJobRoute,
  DashboardRoute: DashboardRoute,
  JobsJobIdRoute: JobsJobIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
